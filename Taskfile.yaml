# https://taskfile.dev

version: '3'

tasks:
  watch:build:
    desc: 👨🏻‍💻 build git-tools in watch mode
    aliases:
      - dev
    summary: |
      This task will build git-tools in watch mode. If we want to build a specific member, we can
      pass the member name as a variable. For example, to build the `status` package, we can run
      `task dev p=status`.
    vars:
      p: '{{.p | default ""}}'
    cmds:
      - cargo watch -c -x "build {{if eq .p ""}}{{else}}-p {{.p}}{{end}}"

  watch:run:
    desc: 🚀 run git-tools in watch mode
    aliases:
      - dev:run
    summary: |
      This task will run git-tools in watch mode. If we want to run a specific member, we can
      pass the member name as a variable. For example, to run the `status` package, we can run
      `task dev:run p=status`.
      We can also pass additional arguments to the binary. For example, to run the `status` package
      with the `--help` flag, we can run `task dev:run p=status args="--help"`.
    vars:
      p: '{{.p | default ""}}'
      args: '{{.args | default ""}}'
    cmds:
      - cargo watch -x "run {{if eq .p ""}}{{else}}-p {{.p}}{{end}} -- {{.args}}"

  build:
    desc: ⚡ build all as «release»
    cmds:
      - cargo build --release --workspace

  fmt:
    desc: 🎨 format git-tools
    cmds:
      - cargo +nightly fmt --all
  
  fmt:check:
    desc: 🎨 check git-tools formatting
    cmds:
      - cargo +nightly fmt --all --check

  lint:
    desc: 🧶 lint git-tools
    cmds:
      - cargo clippy --fix --workspace --allow-staged
  
  lint:check:
    desc: 🧶 check git-tools linting
    cmds:
      - cargo clippy --workspace

  fmt+lint:
    desc: 🎨🧶 format and lint git-tools
    cmds:
      - task fmt
      - git add .
      - task lint

  release:patch:
    desc: 🚀 release git-tools
    cmds:
      - cargo release patch --execute --no-confirm --package git-tools

  release:minor:
    desc: 🚀 release git-tools
    cmds:
      - cargo release minor --execute --no-confirm --package git-tools

  release:major:
    desc: 🚀 release git-tools
    cmds:
      - cargo release major --execute --no-confirm --package git-tools

